from aiogram import types
from aiogram.filters.command import Command
from aiogram import F
from aiogram.enums import ParseMode

from modules.constructs import Constructs
from modules.payment import Payment
from modules.keyboards import keyboards
from modules.messages import _message

class admin_handlers:
    def __init__(self, dp, bd, bot):
        self.dp = dp
        self.bd = bd
        self.bot = bot
    async def main(self):
        @self.dp.message(Command("admins"))
        async def admins(message: types.Message):
            ss = await self.bd.get_user(message.from_user.id)
            if ss[0]["is_admin"] == True:
                adminlist = '–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n\n'
                admins = await self.bd.select_admins()
                for admin in admins:
                    userAdmin = await self.bot.get_chat(admin["user_id"])
                    text = f"üîπ {admin["user_id"]} | {userAdmin.username} | {userAdmin.full_name}\n"
                    adminlist= adminlist + text
                text1 = '\n/grant_admin [id] - –î–æ–±–∞–≤–∏—Ç—å –∞–º–∏–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \n/ungrant_admin [id] - –£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
                adminlist = adminlist + text1
                await message.answer(text=adminlist)
        @self.dp.message(Command("ungrant_admin"))
        async def ungrantadmin(message: types.Message):
            ss = await self.bd.get_user(message.from_user.id)
            if ss[0]["is_admin"] == True:
                args = message.text.split()[1:]
                if args:
                    if len(args) == 1:
                        user = await self.bd.get_user(int(args[0]))
                        if user:
                            if user[0]["is_admin"] == True:
                                await self.bd.admin_ungrant(args[0])
                                await self.bot.send_message(args[0], "–í–∞—Å —Å–Ω—è–ª–∏ —Å —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                                await message.answer(text=f"–í—ã —É–±—Ä–∞–ª–∏ –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞ —É {args[0]}")
                            else:
                                await message.answer(text=f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id: {args[0]} –Ω–µ—Ç—É –∞–¥–º–∏–Ω –ø—Ä–∞–≤")
                            
                        else:
                            await message.answer(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id: {args[0]} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    await message.answer(text="–û—Ç—Å—Ç–≤—É—é—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã [id]")

        @self.dp.message(Command("grant_admin"))
        async def grant_admin(message: types.Message):
            ss = await self.bd.get_user(message.from_user.id)
            if ss[0]["is_admin"] == True:
                args = message.text.split()[1:]
                if args:
                    if len(args) == 1:
                        user = await self.bd.get_user(int(args[0]))
                        print(user)
                        if user:
                            if user[0]["is_admin"] == False:
                                await self.bd.admin_grant(int(args[0]))
                                await message.answer(text=f"–í—ã –≤—ã–¥–∞–ª–∏ –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞ –¥–ª—è {args[0]}")
                                await self.bot.send_message(args[0], "–í–∞—Å –ø–æ–≤—ã—Å–∏–ª–∏ –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
                            else:
                                await message.answer(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {args[0]} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
                        else:
                            await message.answer(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id: {args[0]} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    await message.answer(text="–û—Ç—Å—Ç–≤—É—é—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã [id]")

        @self.dp.message(Command("add_money"))
        async def add_money(message: types.Message):
            ss = await self.bd.get_user(message.from_user.id)
            if ss[0]["is_admin"] == True:
                args = message.text.split()[1:]
                if args:
                    if len(args) == 2:
                        user = await self.bd.get_user(int(args[0]))
                        if user:
                            await self.bd.add_balance(int(args[0]), int(args[1]))
                            await message.answer(text=f"–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω id: {args[0]} —Å—É–º–º–∞: {args[1]} ‚ÇΩ")
                            
                            await self.bot.send_message(chat_id=int(args[0]), text=f"–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω —Å—É–º–º–∞: {args[1]} ‚ÇΩ")
                        else:
                            await message.answer(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id: {args[0]} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    else:
                        await message.answer(text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –∏—Ö —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, [id] [–°—É–º–º–∞]")
                else:
                    await message.answer(text="–û—Ç—Å—Ç–≤—É—é—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã [id] [–°—É–º–º–∞]")
        @self.dp.message(Command("create_product"))
        async def add_money(message: types.Message):
            ss = await self.bd.get_user(message.from_user.id)
            if ss[0]["is_admin"] == True:
                args = message.text.split()[1:]
                if args:
                    if len(args) == 5:
                        
                        await self.bd.add_product(str(args[0]), str(args[1]), str(args[2]), int(args[3]), str(args[4]))
                        await message.answer(text=f"–¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω {str(args[0]), str(args[1]), str(args[2]), int(args[3]), str(args[4])}")
                        
                    else:
                        await message.answer(text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –∏—Ö —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, [–ö–∞—Ç–µ–≥–æ—Ä–∏—è] [–ù–∞–∑–≤–∞–Ω–∏–µ] [–û–ø–∏—Å–∞–Ω–∏–µ] [–¶–µ–Ω–∞] [–¢–æ–≤–∞—Ä]")
                else:
                    await message.answer(text="–û—Ç—Å—Ç–≤—É—é—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã [–ö–∞—Ç–µ–≥–æ—Ä–∏—è] [–ù–∞–∑–≤–∞–Ω–∏–µ] [–û–ø–∏—Å–∞–Ω–∏–µ] [–¶–µ–Ω–∞] [–¢–æ–≤–∞—Ä]")
       
